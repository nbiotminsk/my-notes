# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º —á–µ—Ä–µ–∑ winget
# –ó–∞–ø—É—Å–∫: PowerShell -ExecutionPolicy Bypass -File setup-apps.ps1

param(
    [switch]$Silent = $false
)

# –í–∫–ª—é—á–∏—Ç—å UTF-8 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ùå –û–®–ò–ë–ö–ê: –¢—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–ø—É—Å–∫ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!" -ForegroundColor Red
    Write-Host "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:" -ForegroundColor Yellow
    Write-Host "PowerShell -ExecutionPolicy Bypass -File setup-apps.ps1" -ForegroundColor Yellow
    if (-not $Silent) { Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞" }
    exit 1
}

Write-Host "‚úì –ó–∞–ø—É—â–µ–Ω–æ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor Green
Write-Host ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ winget
function Install-Winget {
    Write-Host "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è winget..." -ForegroundColor Yellow
    
    try {
        $winget = Get-Command winget -ErrorAction Stop
        Write-Host "‚úì winget —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
        return $true
    }
    catch {
        Write-Host "‚ùå winget –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É..." -ForegroundColor Red
    }

    try {
        Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ winget —á–µ—Ä–µ–∑ Microsoft Store..." -ForegroundColor Yellow
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Microsoft Store
        if (Get-AppxPackage -Name Microsoft.WindowsStore) {
            Write-Host "–ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å App Installer –∏–∑ Microsoft Store..." -ForegroundColor Yellow
            Start-Process "ms-windows-store://pdp/?ProductId=9NBLGGH4NNS1" -Wait
            Start-Sleep 10
        }
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        Write-Host "–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow
        
        $tempDir = $env:TEMP
        $vcLibsUrl = "https://aka.ms/Microsoft.VCLibs.x64.14.00.Desktop.appx"
        $uiXamlUrl = "https://github.com/microsoft/microsoft-ui-xaml/releases/download/v2.7.3/Microsoft.UI.Xaml.2.7.x64.appx"
        $wingetUrl = "https://github.com/microsoft/winget-cli/releases/latest/download/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle"
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
        $vcLibsPath = Join-Path $tempDir "Microsoft.VCLibs.x64.14.00.Desktop.appx"
        $uiXamlPath = Join-Path $tempDir "Microsoft.UI.Xaml.2.7.x64.appx"
        $wingetPath = Join-Path $tempDir "Microsoft.DesktopAppInstaller.msixbundle"
        
        Invoke-WebRequest -Uri $vcLibsUrl -OutFile $vcLibsPath
        Invoke-WebRequest -Uri $uiXamlUrl -OutFile $uiXamlPath
        Invoke-WebRequest -Uri $wingetUrl -OutFile $wingetPath
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
        Add-AppxPackage -Path $vcLibsPath
        Add-AppxPackage -Path $uiXamlPath
        Add-AppxPackage -Path $wingetPath
        
        # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        Remove-Item $vcLibsPath -Force -ErrorAction SilentlyContinue
        Remove-Item $uiXamlPath -Force -ErrorAction SilentlyContinue
        Remove-Item $wingetPath -Force -ErrorAction SilentlyContinue
        
        Write-Host "‚úì winget —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
        Start-Sleep 5
        return $true
    }
    catch {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å winget: $($_.Exception.Message)" -ForegroundColor Red
        Write-Host "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ –≤—Ä—É—á–Ω—É—é –∏–∑ Microsoft Store" -ForegroundColor Yellow
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function Install-App {
    param(
        [string]$AppId,
        [string]$AppName,
        [int]$Current,
        [int]$Total
    )
    
    Write-Host ""
    Write-Host "[$Current/$Total] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ $AppName..." -ForegroundColor Yellow
    
    try {
        $result = winget install --id=$AppId --exact --silent --accept-package-agreements --accept-source-agreements
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úì $AppName —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
        }
        elseif ($LASTEXITCODE -eq -1978335189) {
            Write-Host "‚ö†Ô∏è $AppName —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Yellow
        }
        else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $AppName (–∫–æ–¥: $LASTEXITCODE)" -ForegroundColor Red
        }
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $AppName : $($_.Exception.Message)" -ForegroundColor Red
    }
    
    Start-Sleep 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ winget
if (-not (Install-Winget)) {
    if (-not $Silent) { Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞" }
    exit 1
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "       –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# –°–ø–∏—Å–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
$apps = @(
    @{ Id = "Microsoft.VCRedist.2015+.x64"; Name = "Microsoft Visual C++ 2015-2022 Redistributable (x64)" },
    @{ Id = "Microsoft.VCRedist.2015+.x86"; Name = "Microsoft Visual C++ 2015-2022 Redistributable (x86)" },
    @{ Id = "Microsoft.DirectX"; Name = "Microsoft DirectX End-User Runtimes" },
    @{ Id = "Microsoft.DotNet.Framework.DeveloperPack_4"; Name = "Microsoft .NET Framework 4.8 Developer Pack" },
    @{ Id = "Git.Git"; Name = "Git" },
    @{ Id = "Google.Chrome"; Name = "Google Chrome" },
    @{ Id = "Microsoft.VisualStudioCode"; Name = "VS Code" },
    @{ Id = "Daum.PotPlayer"; Name = "PotPlayer" },
    @{ Id = "qBittorrent.qBittorrent"; Name = "qBittorrent" },
    @{ Id = "Wintoys.Wintoys"; Name = "WinToys" },
    @{ Id = "Lux-Delux.RyTuneX"; Name = "RyTuneX" },
    @{ Id = "GitHub.cli"; Name = "GitHub CLI" },
    @{ Id = "OpenJS.NodeJS"; Name = "Node.js" },
    @{ Id = "Microsoft.PowerShell"; Name = "PowerShell" },
    @{ Id = "EpicGames.EpicGamesLauncher"; Name = "Epic Games Launcher" },
    @{ Id = "Valve.Steam"; Name = "Steam" },
    @{ Id = "Obsidian.Obsidian"; Name = "Obsidian" },
    @{ Id = "Windscribe.Windscribe"; Name = "Windscribe VPN" },
    @{ Id = "Python.Python.3.12"; Name = "Python 3.12" }
)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
$totalApps = $apps.Count
for ($i = 0; $i -lt $totalApps; $i++) {
    Install-App -AppId $apps[$i].Id -AppName $apps[$i].Name -Current ($i + 1) -Total $totalApps
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "       –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ .NET Framework 3.5 —á–µ—Ä–µ–∑ DISM
Write-Host ""  
Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ .NET Framework 3.5..." -ForegroundColor Yellow
try {
    $dotNet35 = Get-WindowsOptionalFeature -Online -FeatureName NetFx3 -ErrorAction Stop
    if ($dotNet35.State -eq "Enabled") {
        Write-Host "‚úì .NET Framework 3.5 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ .NET Framework 3.5 —á–µ—Ä–µ–∑ DISM..." -ForegroundColor Yellow
        Enable-WindowsOptionalFeature -Online -FeatureName NetFx3 -All -NoRestart
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úì .NET Framework 3.5 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ .NET Framework 3.5" -ForegroundColor Red
        }
    }
}
catch {
    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å .NET Framework 3.5: $($_.Exception.Message)" -ForegroundColor Red
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip
try {
    $pythonPath = Get-Command python -ErrorAction Stop
    Write-Host "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip..." -ForegroundColor Yellow
    python -m pip install --upgrade pip
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úì pip —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è pip" -ForegroundColor Red
    }
}
catch {
    Write-Host "‚ö†Ô∏è Python –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH. –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "              –ó–ê–í–ï–†–®–ï–ù–û" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:" -ForegroundColor Yellow
Write-Host "1. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –≤—Å–µ—Ö –ø—Ä–æ–≥—Ä–∞–º–º"
Write-Host "2. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é PowerShell –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è PATH"
Write-Host "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É—á–µ—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∞—Ö"
Write-Host ""
Write-Host "üîß –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò:" -ForegroundColor Yellow
Write-Host "- Git: git config --global user.name `"–í–∞—à–µ –ò–º—è`""
Write-Host "- Git: git config --global user.email `"your@email.com`""
Write-Host "- VS Code: —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω—É–∂–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è"
Write-Host "- GitHub CLI: gh auth login"
Write-Host ""

if (-not $Silent) {
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è"
    
    $choice = Read-Host "–•–æ—Ç–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º? (y/n)"
    if ($choice -eq "y" -or $choice -eq "Y") {
        Write-Host ""
        Write-Host "–°–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º —á–µ—Ä–µ–∑ winget:" -ForegroundColor Yellow
        winget list
    }
    
    Write-Host ""
    Read-Host "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞"
}
